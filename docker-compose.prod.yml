services:
  meu-dash-prod:
    container_name: meu-dash-prod-local
    # Constrói a imagem usando o Dockerfile de produção, que inclui Nginx e Gunicorn.
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      # Expõe a porta do Nginx (80) para a porta 8080 no seu computador.
      - "8080:80"
    env_file:
      - .env
    environment:
      # Garante que o backend saiba a URL do frontend para gerar links corretos.
      # Note que usamos a porta do Nginx (8080) aqui.
      - FRONTEND_BASE_URL=http://localhost:8080
    volumes:
      # Usa um volume nomeado para os dados, resolvendo problemas de permissão
      # e garantindo que o banco de dados e os relatórios persistam.
      # Isso simula o comportamento de um PersistentVolume no Kubernetes.
      - data-volume:/app/data
    # O comando de inicialização orquestra o Nginx e o Gunicorn.
    # 1. Inicia o Gunicorn em background para servir a API na porta 5000.
    # 2. Inicia o Nginx em foreground, que serve o frontend e faz proxy para o Gunicorn.
    #    'daemon off;' é crucial para que o Nginx não se desprenda e mantenha o contêiner ativo.
    command: /bin/sh -c "gunicorn --workers 4 --bind 127.0.0.1:5000 'src.app:app' --chdir /app & nginx -g 'daemon off;'"

# Declara o volume nomeado para persistência dos dados.
volumes:
  data-volume: