# --- Namespace para organizar os recursos da aplicação ---
apiVersion: v1
kind: Namespace
metadata:
  name: smart-plan

---
# --- Headless Service: Necessário para o StatefulSet ---
apiVersion: v1
kind: Service
metadata:
  name: smart-plan-headless
  namespace: smart-plan
spec:
  clusterIP: None
  selector:
    app: smart-plan
  ports:
  - port: 80
    targetPort: http

---
# --- Service ClusterIP: Ponto de acesso interno para o Ingress ---
apiVersion: v1
kind: Service
metadata:
  name: smart-plan
  namespace: smart-plan
spec:
  type: ClusterIP
  selector:
    app: smart-plan
  ports:
  - name: http
    port: 80
    targetPort: http

---
# --- PodDisruptionBudget (PDB): Garante a alta disponibilidade ---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: smart-plan-pdb
  namespace: smart-plan
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: smart-plan

---
# --- StatefulSet: Orquestração dos Pods da aplicação ---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: smart-plan
  namespace: smart-plan
spec:
  serviceName: "smart-plan-headless"
  replicas: 1
  selector:
    matchLabels:
      app: smart-plan
  template:
    metadata:
      labels:
        app: smart-plan
    spec:
      containers:
      # Contêiner do Nginx: serve o frontend e faz proxy para o backend
      - name: smart-plan-nginx
        image: sevenleo/smart-plan:latest
        ports:
        - name: http
          containerPort: 80
        # Comando para iniciar o Nginx em primeiro plano.
        command: ["nginx", "-g", "daemon off;"]
        volumeMounts:
        - name: smart-plan-data
          mountPath: /app/data
        # As sondas de saúde agora apontam para o Nginx, que é a porta de entrada do Pod.
        readinessProbe:
          httpGet:
            path: / # Uma requisição para a raiz do frontend é suficiente
            port: http
        livenessProbe:
          httpGet:
            path: /
            port: http

      # Contêiner da API (Gunicorn/Flask): roda a lógica de negócio
      - name: smart-plan-api
        image: sevenleo/smart-plan:latest
        # Este contêiner não expõe portas para fora do Pod.
        # Ele é acessado pelo Nginx via localhost.
        # Comando para iniciar a aplicação Python com Gunicorn.
        command: ["gunicorn", "--workers", "4", "--bind", "127.0.0.1:5000", "src.app:app", "--chdir", "/app"]
        env:
        - name: ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: admin-credentials
              key: ADMIN_USER
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: admin-credentials
              key: ADMIN_PASSWORD
        # A sonda de saúde para a API verifica o endpoint /health diretamente no Gunicorn
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          requests:
            cpu: "256m"
            memory: "512Mi"
          limits:
            cpu: "256m"
            memory: "512Mi"
        volumeMounts:
        - name: smart-plan-data
          mountPath: /app/data
  volumeClaimTemplates:
  - metadata:
      name: smart-plan-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: smart-plan-ingress
  namespace: smart-plan
  annotations:
    # Adicione aqui anotações específicas do seu Ingress Controller, se necessário
    # Ex: kubernetes.io/ingress.class: "nginx"
    # Ex: cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - smart-plan.devops-master.shop
    secretName: smart-plan-tls-secret # O Cert-Manager pode criar isso automaticamente
  rules:
  - host: smart-plan.devops-master.shop
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: smart-plan
            port:
              number: 80
