# Bloco de eventos, obrigatório pelo Nginx, mesmo que vazio.
events {
    worker_connections 1024; # Número padrão de conexões por worker.
}

# Bloco HTTP, que contém as configurações do servidor web.
http {
    # Inclui os tipos MIME padrão para que o Nginx saiba como servir diferentes arquivos.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Envia os logs de acesso para a saída padrão para que possam ser capturados pelo 'kubectl logs'.
    access_log /dev/stdout;

    server {
        listen 80;
        server_name _;

        # Diretório raiz para os arquivos estáticos do frontend
        root /var/www/html;
        index index.html;

        # Configuração para servir a Single-Page Application (SPA)
        # Tenta encontrar o arquivo solicitado. Se não encontrar,
        # serve o index.html para que o React Router assuma o controle.
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Configuração para fazer proxy reverso para a API do Flask/Gunicorn
        # Todas as requisições para /api/... serão redirecionadas para o Gunicorn.
        location /api/ {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rota específica para o arquivo de definição do Swagger.
        # Esta regra é crucial. Sem ela, o Nginx tenta servir o swagger.json
        # como um arquivo estático do frontend, o que falha.
        location = /swagger.json {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rota para a especificação da API que o Flasgger procura por padrão.
        # Esta regra garante que a UI do Swagger consiga carregar a definição da API.
        location = /apispec_1.json {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rota para a documentação da API.
        # Serve um arquivo HTML estático e customizado que nós controlamos.
        # O caminho foi padronizado para /docs/apidocs.
        location = /docs/apidocs {
            try_files /apidocs.html =404;
        }

        # Rota para servir a documentação gerencial e relatórios via backend.
        # Esta regra é necessária para que o Flask/Gunicorn sirva arquivos
        # estáticos que não fazem parte da SPA do frontend.
        location ~ ^/(reports|docs|admin)/ {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}