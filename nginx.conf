# nginx.conf

# Bloco de eventos, obrigatório pelo Nginx.
events {
    worker_connections 1024; # Número padrão de conexões por worker.
}

# Bloco HTTP, que contém as configurações do servidor web.
http {
    # Inclui os tipos MIME padrão para que o Nginx saiba como servir diferentes arquivos.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Define uma zona de memória para o rate limiting.
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Envia os logs de acesso para a saída padrão para que possam ser capturados pelo 'kubectl logs'.
    access_log /dev/stdout;

    server {
        listen 80;
        server_name _;

        # Diretório raiz para os arquivos estáticos do frontend (React build).
        root /var/www/html;
        index index.html;

        # --- CORREÇÃO DEFINITIVA PARA IFRAMES (Cloudflare) ---
        # Adiciona o cabeçalho Content-Security-Policy com a diretiva 'frame-ancestors'.
        # Esta é a abordagem moderna que substitui o X-Frame-Options e funciona
        # corretamente em ambientes com proxies de segurança como o Cloudflare.
        # 'self' permite que a página seja exibida em iframes apenas pelo mesmo domínio.
        add_header Content-Security-Policy "frame-ancestors 'self';" always;

        # Configuração para servir a Single-Page Application (SPA).
        location / {
            try_files $uri $uri/ /index.html;
        }

        # --- REGRAS DE PROXY PARA O BACKEND (CONSOLIDADAS) ---
        # Este bloco único usa uma expressão regular (regex) para capturar todas as rotas
        # que devem ser redirecionadas para a API do Flask/Gunicorn.
        location ~ ^/(api|admin|reports|docs|apidocs|flasgger_static|swagger\.json|apispec_1\.json) {
            # Aplica o rate limiting definido acima para proteger a API.
            limit_req zone=api_limit burst=20 nodelay;

            # Redireciona a requisição para o serviço do Gunicorn.
            proxy_pass http://127.0.0.1:5000;
            
            # Cabeçalhos essenciais para a aplicação backend.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}