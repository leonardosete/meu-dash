# nginx.conf

# Define um mapa para identificar as rotas que devem ser enviadas para o backend.
# Isso evita a repetição de blocos 'location' e centraliza a lógica.
map $request_uri $is_backend_route {
    default 0;
    ~^/api 1;
    ~^/reports 1;
    ~^/docs 1;
    ~^/apidocs 1;
    ~^/flasgger_static 1;
    ~^/admin 1;
}

server {
    listen 80;
    server_name localhost;

    # Raiz para os arquivos estáticos do frontend (React build)
    root /usr/share/nginx/html;
    include /etc/nginx/mime.types;

    # Localização principal que lida com todas as requisições
    location / {
        # Se a requisição for para o backend, faz o proxy
        if ($is_backend_route) {
            proxy_pass http://127.0.0.1:5000;

            # --- CORREÇÃO: Adiciona os cabeçalhos essenciais para o reverse proxy ---
            # Estes cabeçalhos informam ao backend (Flask) sobre a requisição original do cliente,
            # incluindo o protocolo (https), que é a causa do erro de "Mixed Content".
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # --------------------------------------------------------------------
            
            # Configurações adicionais de proxy para robustez
            proxy_redirect off;
            proxy_buffering off;
            break; # Interrompe o processamento para evitar que caia no try_files
        }

        # Se não for para o backend, serve os arquivos estáticos do frontend.
        # O fallback para /index.html é o que permite o roteamento do React (SPA) funcionar.
        try_files $uri /index.html;
    }

    # Opcional: Adiciona um endpoint de status do Nginx para debugging
    location /nginx_status {
        stub_status;
        allow 127.0.0.1; # Apenas acesso local
        deny all;
    }
}