# Define o número de processos de trabalho. 'auto' é geralmente uma boa escolha.
worker_processes auto;

events {
    # O número máximo de conexões simultâneas que um worker pode manipular.
    worker_connections 1024;
}

http {
    # Inclui os tipos MIME padrão para que o navegador saiba como lidar com cada arquivo (css, js, jpg, etc.).
    include /etc/nginx/mime.types;
    # Define o tipo padrão se o tipo de arquivo não for encontrado.
    default_type application/octet-stream;

    server {
        # O Nginx escutará na porta 80 DENTRO do contêiner.
        listen 80;
        # Define o nome do servidor (boa prática, embora não estritamente necessário neste setup).
        server_name localhost;

        # --- Regra para a API e recursos do backend ---
        # Qualquer requisição que comece com /api/, /admin/, /docs/, /apidocs/ ou /flasgger_static/
        # será encaminhada para o Gunicorn/Flask.
        location ~ ^/(api|admin|docs|apidocs|flasgger_static)/ {
            # Endereço onde o Gunicorn está escutando (localhost na porta 5000).
            proxy_pass http://127.0.0.1:5000;
            
            # --- CABEÇALHOS ESSENCIAIS PARA O PROXY REVERSO ---
            # Passa o Host original da requisição para o backend.
            proxy_set_header Host $host;
            # Passa o IP real do cliente para o backend.
            proxy_set_header X-Real-IP $remote_addr;
            # Passa a lista de IPs pelos quais a requisição passou.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # **A LINHA MAIS IMPORTANTE PARA CORRIGIR O "MIXED CONTENT"**
            # Informa ao backend (Flask) que a conexão original do cliente era HTTPS.
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --- Regra para os Relatórios Estáticos ---
        # Requisições para /reports/ são mapeadas para o diretório de dados.
        location /reports/ {
            # 'alias' mapeia a URL para um diretório no sistema de arquivos.
            alias /app/data/reports/;
            # Tenta servir o arquivo diretamente. Se não encontrar, retorna 404.
            try_files $uri $uri/ =404;
        }

        # --- Regra Padrão para o Frontend (React SPA) ---
        # Qualquer outra requisição que não corresponda às regras acima cairá aqui.
        location / {
            # O diretório onde o build do React está localizado.
            root /app/frontend/dist;
            # Tenta encontrar o arquivo solicitado. Se não encontrar, serve o index.html.
            # Isso é o que faz o roteamento do React (React Router) funcionar.
            try_files $uri /index.html;
        }
    }
}