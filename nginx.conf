# Define o número de processos de trabalho. 'auto' é geralmente uma boa escolha.
worker_processes auto;

events {
    # O número máximo de conexões simultâneas que um worker pode manipular.
    worker_connections 1024;
}

http {
    # Inclui os tipos MIME padrão para que o navegador saiba como lidar com cada arquivo (css, js, jpg, etc.).
    include /etc/nginx/mime.types;
    # Define o tipo padrão se o tipo de arquivo não for encontrado.
    default_type application/octet-stream;

    # --- LÓGICA PARA DETERMINAR O PROTOCOLO CORRETO ---
    # Este bloco 'map' é a chave da solução.
    # 1. Ele verifica se o cabeçalho 'X-Forwarded-Proto' já foi enviado pelo Ingress.
    # 2. Se foi, ele usa esse valor (que será 'https').
    # 3. Se não foi, ele usa o esquema da conexão atual (que seria 'http').
    # Isso garante que a informação de HTTPS do Ingress seja sempre priorizada.
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    server {
        # O Nginx escutará na porta 80 DENTRO do contêiner.
        listen 80;
        # Define o nome do servidor (boa prática, embora não estritamente necessário neste setup).
        server_name localhost;

        # --- Regra para a API e recursos do backend ---
        location ~ ^/(api|admin|docs|apocs|flasgger_static)/ {
            # Endereço onde o Gunicorn está escutando (localhost na porta 5000).
            proxy_pass http://127.0.0.1:5000;
            
            # --- CABEÇALHOS ESSENCIAIS PARA O PROXY REVERSO ---
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # **A CORREÇÃO DEFINITIVA**
            # Usa o valor do 'map' que definimos acima para enviar o protocolo correto para o Flask.
            proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
        }

        # --- Regra para os Relatórios Estáticos ---
        location /reports/ {
            alias /app/data/reports/;
            try_files $uri $uri/ =404;
        }

        # --- Regra Padrão para o Frontend (React SPA) ---
        location / {
            root /app/frontend/dist;
            try_files $uri /index.html;
        }
    }
}