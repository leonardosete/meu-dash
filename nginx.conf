# nginx.conf

# Bloco de eventos, obrigatório pelo Nginx.
events {
    worker_connections 1024; # Número padrão de conexões por worker.
}

# Bloco HTTP, que contém as configurações do servidor web.
http {
    # Inclui os tipos MIME padrão para que o Nginx saiba como servir diferentes arquivos.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Define uma zona de memória para o rate limiting.
    # 'api_limit' é o nome da zona, 'binary_remote_addr' é a chave (IP do cliente),
    # '10m' é o tamanho da zona, e 'rate=10r/s' é o limite (10 requisições por segundo).
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Envia os logs de acesso para a saída padrão para que possam ser capturados pelo 'kubectl logs'.
    access_log /dev/stdout;

    server {
        listen 80;
        server_name _;

        # Diretório raiz para os arquivos estáticos do frontend (React build).
        root /var/www/html;
        index index.html;

        # --- CORREÇÃO PARA IFRAMES EM BRANCO ---
        # Adiciona o cabeçalho de segurança que permite que a própria aplicação
        # exiba seus relatórios em iframes. "SAMEORIGIN" restringe a exibição
        # apenas para páginas do mesmo domínio.
        add_header X-Frame-Options "SAMEORIGIN" always;

        # Configuração para servir a Single-Page Application (SPA).
        # Tenta encontrar o arquivo solicitado. Se não encontrar,
        # serve o index.html para que o React Router do frontend assuma o controle.
        location / {
            try_files $uri $uri/ /index.html;
        }

        # --- REGRAS DE PROXY PARA O BACKEND (CONSOLIDADAS) ---
        # Este bloco único usa uma expressão regular (regex) para capturar todas as rotas
        # que devem ser redirecionadas para a API do Flask/Gunicorn.
        # Isso inclui:
        #   - /api/...         (Endpoints da API)
        #   - /admin/...       (Rotas de administração)
        #   - /reports/...     (Relatórios gerados)
        #   - /docs/...        (Documentação estática servida pelo backend)
        #   - /apidocs/...     (UI do Swagger)
        #   - /flasgger_static/... (Assets do Swagger)
        #   - /swagger.json e /apispec_1.json (Definições da API para o Swagger)
        location ~ ^/(api|admin|reports|docs|apidocs|flasgger_static|swagger\.json|apispec_1\.json) {
            # Aplica o rate limiting definido acima para proteger a API.
            # 'burst=20' permite um pico de até 20 requisições,
            # e 'nodelay' rejeita imediatamente as requisições excedentes.
            limit_req zone=api_limit burst=20 nodelay;

            # Redireciona a requisição para o serviço do Gunicorn que está rodando
            # na mesma Pod, na porta 5000.
            proxy_pass http://127.0.0.1:5000;
            
            # Cabeçalhos essenciais para que a aplicação backend receba as informações
            # corretas sobre a requisição original do cliente.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}