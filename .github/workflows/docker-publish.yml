# TESTE
# Workflow para automatizar o build e push da imagem Docker para o Docker Hub.
name: Docker Publish - Build and Push Image

on:
  # Dispara o workflow em cada push para a branch 'minha-feature'.
  push:
    # branches: [ "upload-web-2-csv-e-tendencia" ]

  # Permite a execução manual do workflow a partir da aba "Actions" do GitHub.
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    # Executa o job em um runner Ubuntu mais recente.
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código: Baixa o código do repositório para o runner.
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      # 2. Login no Docker Hub: Autentica no registry para poder enviar a imagem.
      #    Utiliza segredos configurados no repositório do GitHub para segurança.
      - name: Log in to Docker Hub
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build e Push da Imagem: Constrói a imagem a partir do Dockerfile e a envia para o Docker Hub.
      #    A imagem é tagueada com 'latest' para a versão mais recente e com o hash do commit (SHA)
      #    para rastreabilidade e versionamento preciso.
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        with:
          context: .
          push: true
          # Usa o DOCKERHUB_USERNAME dos secrets para montar o nome da imagem dinamicamente.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/meu-dash-web:latest, ${{ secrets.DOCKERHUB_USERNAME }}/meu-dash-web:${{ github.sha }}
